import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.utils.markdown import hbold
from openai import AsyncOpenAI
from dotenv import load_dotenv
import os

load_dotenv()
TELEGRAM_TOKEN = "your-telegram-token-here"
OPENAI_API_KEY = "your-openai-api-key-here"

ADMINS = [621587126, 619318985]  # @kazakoff_kalyamba, @anka_miron

bot = Bot(token=TELEGRAM_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
client = AsyncOpenAI(api_key=OPENAI_API_KEY)

# ‚Äî‚Äî‚Äî –§–∏–ª—å—Ç—Ä: –Ω–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –æ–¥–Ω–∏ —ç–º–æ–¥–∑–∏/—Ä–µ–∞–∫—Ü–∏–∏
REACTIONS = ["üî•", "‚ù§Ô∏è", "üòÇ", "üòç", "üò¢", "üëè", "üòÆ"]

def is_valid_message(message: types.Message) -> bool:
    return message.text and message.text.strip() not in REACTIONS

@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üëã –ù–∞–ø–∏—à–∏ –º–Ω–µ, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –æ –Ω–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–∞—Ö, —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –ø–æ –º–∞–∫—Å–∏–º—É–º—É üòä")

@dp.message(F.text)
async def handle_message(message: Message):
    if not is_valid_message(message):
        return

    user_msg = message.text.strip()

    try:
        system_prompt = (
            "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, —Å—Ç–∏–ª—å–Ω—ã–π –∏ –Ω–µ–º–Ω–æ–≥–æ –¥–µ—Ä–∑–∫–∏–π —á–∞—Ç-–±–æ—Ç –æ—Ç –∏–º–µ–Ω–∏ WHY NOT Wakeboard. "
            "–û–±—â–∞–π—Å—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏–ª–∏ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–º, –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç. –ì–æ–≤–æ—Ä–∏ —Å —é–º–æ—Ä–æ–º, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –∂–∏–≤–æ. "
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏—Å–ª–∞–ª —Ñ–µ–π–ª. –û—Ç–≤–µ—á–∞–π –Ω–∞ –∑–∞–∫–∞–∑—ã, –≤–æ–ø—Ä–æ—Å—ã, —Å–ª–µ–Ω–≥ –∏ –∫—ç–º–ø—ã –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã –∏—Ö —Ä–∞–π–¥–µ—Ä-–¥—Ä—É–≥."
        )

        response = await client.chat.completions.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_msg}
            ],
            temperature=0.85
        )
        reply = response.choices[0].message.content.strip()

        await message.answer(reply)

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É
        for admin in ADMINS:
            await bot.send_message(
                chat_id=admin,
                text=(
                    f"<b>üí¨ –í–æ–ø—Ä–æ—Å –æ—Ç @{message.from_user.username or message.from_user.first_name}:</b>\n"
                    f"{user_msg}\n\n"
                    f"<b>ü§ñ –û—Ç–≤–µ—Ç:</b>\n{reply}"
                )
            )

    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞")
        await message.answer("–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ üõ†")

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    import asyncio
    asyncio.run(dp.start_polling(bot))
